# -*- coding: utf-8 -*-
"""Ridge-alpha.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eVHKrU8vYDOzE_JXVIqRi0lWKVJyjF9L
"""

!nvidia-smi

import pandas as pd
import numpy as np
import seaborn as sns
from maths import sqrt

#Data_x3 = pd.read_csv(r'C:\\Users\\Krishna\\Desktop\\XGB\\D_4.csv')
Data_x3 = pd.read_csv('/content/drive/MyDrive/data_kinshu/D_4 .csv')
Data_x3 = Data_x3.astype(float)
Data_x3 = Data_x3.values
Data_x3 = Data_x3[0:1000,:]
#Data_y3 = pd.read_csv(r'C:\\Users\\Krishna\\Desktop\\XGB\\combined.csv')
Data_y3 = pd.read_csv('/content/drive/MyDrive/data_kinshu/combined.csv')
Data_y3 = Data_y3.astype(float)
Data_y3 = Data_y3.values
Data_y3 = Data_y3[0:1000,:]

print(Data_x3.shape)
print(Data_y3.shape)

"""Ridge Regression"""

from sklearn.model_selection import GridSearchCV
from sklearn.linear_model import Ridge

ridge = Ridge()
parameters = { 'alpha' : [1e-20,1e-10,1e-2,1,5,8,10,20,30,35,40,50,55,100,120,150]}

ridge_regg = GridSearchCV(ridge, parameters, scoring='neg_mean_squared_error', cv=5)

from pandas.core.common import random_state
from sklearn.model_selection import train_test_split

#Splitting dataset into traning and testing
x_train,x_test,y_train,y_test = train_test_split(Data_x3, Data_y3, test_size = 0.3)

"""Fitting and evaluating the best parameter for the model"""

ridge_regg.fit(x_train,y_train)

print(ridge_regg.best_params_)
print(ridge_regg.best_score_)
print(ridge_regg.best_estimator_)

#prediction

y_pred = ridge_regg.predict(x_test)

print(y_pred.shape)
print(y_test.shape)

sns.distplot(y_test-y_pred)

#score check
import sklearn.metrics as sm

round(sm.r2_score(y_test[:,0:10],y_pred[:,0:10]),2)
round(sm.r2_score(y_test[:,10:19],y_pred[:,10:19]),2)

